import {
  init_esm
} from "./chunk-AXRFR7RS.js";
import {
  require_react
} from "./chunk-OU2QLVNP.js";
import {
  __esm,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@material-ui/core/esm/utils/capitalize.js
function capitalize(string) {
  if (typeof string !== "string") {
    throw new Error(true ? "Material-UI: capitalize(string) expects a string argument." : formatMuiErrorMessage(7));
  }
  return string.charAt(0).toUpperCase() + string.slice(1);
}
var init_capitalize = __esm({
  "node_modules/@material-ui/core/esm/utils/capitalize.js"() {
    init_esm();
  }
});

// node_modules/@material-ui/core/esm/utils/deprecatedPropType.js
function deprecatedPropType(validator, reason) {
  if (false) {
    return function() {
      return null;
    };
  }
  return function(props, propName, componentName, location, propFullName) {
    var componentNameSafe = componentName || "<<anonymous>>";
    var propFullNameSafe = propFullName || propName;
    if (typeof props[propName] !== "undefined") {
      return new Error("The ".concat(location, " `").concat(propFullNameSafe, "` of ") + "`".concat(componentNameSafe, "` is deprecated. ").concat(reason));
    }
    return null;
  };
}
var init_deprecatedPropType = __esm({
  "node_modules/@material-ui/core/esm/utils/deprecatedPropType.js"() {
  }
});

// node_modules/@material-ui/core/esm/utils/setRef.js
function setRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}
var init_setRef = __esm({
  "node_modules/@material-ui/core/esm/utils/setRef.js"() {
  }
});

// node_modules/@material-ui/core/esm/utils/useEventCallback.js
function useEventCallback(fn) {
  var ref = React.useRef(fn);
  useEnhancedEffect(function() {
    ref.current = fn;
  });
  return React.useCallback(function() {
    return (0, ref.current).apply(void 0, arguments);
  }, []);
}
var React, useEnhancedEffect;
var init_useEventCallback = __esm({
  "node_modules/@material-ui/core/esm/utils/useEventCallback.js"() {
    React = __toESM(require_react());
    useEnhancedEffect = typeof window !== "undefined" ? React.useLayoutEffect : React.useEffect;
  }
});

// node_modules/@material-ui/core/esm/utils/useForkRef.js
function useForkRef(refA, refB) {
  return React2.useMemo(function() {
    if (refA == null && refB == null) {
      return null;
    }
    return function(refValue) {
      setRef(refA, refValue);
      setRef(refB, refValue);
    };
  }, [refA, refB]);
}
var React2;
var init_useForkRef = __esm({
  "node_modules/@material-ui/core/esm/utils/useForkRef.js"() {
    React2 = __toESM(require_react());
    init_setRef();
  }
});

export {
  capitalize,
  init_capitalize,
  deprecatedPropType,
  init_deprecatedPropType,
  setRef,
  init_setRef,
  useEventCallback,
  init_useEventCallback,
  useForkRef,
  init_useForkRef
};
//# sourceMappingURL=chunk-SPKRN2YJ.js.map
